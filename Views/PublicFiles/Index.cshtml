@model IEnumerable<OnlineCompiler.Models.PublicFiles>
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Publicly Shared Files";
    var currentUsername = Context.Session.GetString("Username");
    var currentUserId = Context.Session.GetInt32("UserId");
    var ImportedFileIds = ViewBag.ImportedFileIds as List<int> ?? new List<int>();
}

<h1>Publicly Shared Files</h1>

<table class="table">
    <thead>
        <tr>
            <th>File Name</th>
            <th>Author</th>
            <th>Last Updated</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var isImported = ImportedFileIds.Contains(item.Id);
            <tr>
                <td>@item.AuthorOriginalFile.Name</td>
                <td>
                    @if(Context.Session.GetString("Username") == item.Author){
                        <p>You</p>
                    }
                    else{
                        @item.Author
                    }
                </td>
                <td>@item.UpdateDate.ToString("g")</td>
                @if(Context.Session.GetString("Username") != item.Author){
                <td>
                    @if(isImported){
                        <span class="text-success">
                            <i class="fas fa-check-circle"></i> Imported
                        </span>
                    }
                    else{
                        <form asp-controller="ImportFile" asp-action="Import" method="post" onsubmit="return validateVersionSelection(this)">
                            <input type="hidden" name="fileId" value="@item.PublicFileId" />
                            
                            <div class="form-group">
                                <label for="versionSelect-@item.PublicFileId">Select Version:</label>
                                <select class="form-control" id="versionSelect-@item.PublicFileId" name="versionIndex" required>
                                    <option value="">-- Select Version --</option>
                                    @for (int i = 0; i < item.Versions.Count; i++)
                                    {
                                        <option value="@i">@item.Versions[i].Version.ToString("g")</option>
                                    }
                                </select>
                            </div>
                            
                            <button type="submit" class="btn btn-primary mt-2">Import</button>
                        </form>
                    }
                </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function validateVersionSelection(form) {
            const select = form.querySelector('select[name="versionIndex"]');
            if (!select.value) {
                alert('Please select a version to import');
                return false;
            }
            return true;
        }

        function importFile(fileId, versionIndex, buttonElement) {
            fetch('/ImportFile/Import', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `fileId=${fileId}&versionIndex=${versionIndex}`
            })
            .then(response => {
                if (response.ok) {
                    const td = buttonElement.parentElement;
                    td.innerHTML = `
                        <span class="text-success">
                            <i class="fas fa-check-circle"></i> Imported
                        </span>
                    `;
                } else {
                    alert('Error importing file');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error importing file');
            });
        }
    </script>
}